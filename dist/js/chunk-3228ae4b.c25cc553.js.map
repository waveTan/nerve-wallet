{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./src/api/requestData.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js"],"names":["ctx","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","length","index","result","undefined","push","inputsOrOutputs","transferInfo","balanceInfo","type","console","log","newAmount","amount","fee","newLocked","newNonce","nonce","newoutputAmount","newLockTime","inputs","outputs","defaultAssetsInfo","newArr","address","fromAddress","assetsChainId","assetsId","locked","feeArr","chainId","feeBalanceInfo","toAddress","lockTime","success","data","times","Date","valueOf","Number","toString","substr","nonceList","item","deposit","allAmount","getNulsBalance","assetChainId","assetId","post","then","response","hasOwnProperty","balance","catch","error","getBaseAssetInfo","validateAndBroadcast","txHex","newHash","value","hash","agentDeposistList","agentHash","getAllAddressPrefix","newData","addressPrefix","sessionStorage","removeItem","setItem","JSON","stringify","getPrefixByChainId","prefixData","parse","getItem","newInfo","find","v","getScanAutograph","randomString","pubkey","signData","commitData","txHexKey","signDataKey","assembleHex","parameterValue","getHash","txSerialize","txInfo","url","localStorage","urls","getReduceNonceList","reduceAmount","quitAll","API_URL","chainID","params","Math","floor","random","axios","$export","$find","KEY","forced","Array","P","F","this","arguments","speciesConstructor","original","isObject","isArray","SPECIES","C","constructor","prototype"],"mappings":"qGAOA,IAAIA,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAM,EAAQ,QAClBC,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAiB,GAARF,EACTG,EAAoB,GAARH,EACZI,EAAkB,GAARJ,EACVK,EAAmB,GAARL,EACXM,EAAwB,GAARN,EAChBO,EAAmB,GAARP,GAAaM,EACxBE,EAASP,GAAWJ,EACxB,OAAO,SAAUY,EAAOC,EAAYC,GAQlC,IAPA,IAMIC,EAAKC,EANLC,EAAInB,EAASc,GACbM,EAAOrB,EAAQoB,GACfE,EAAIvB,EAAIiB,EAAYC,EAAM,GAC1BM,EAASrB,EAASmB,EAAKE,QACvBC,EAAQ,EACRC,EAASjB,EAASM,EAAOC,EAAOQ,GAAUd,EAAYK,EAAOC,EAAO,QAAKW,EAEvEH,EAASC,EAAOA,IAAS,IAAIX,GAAYW,KAASH,KACtDH,EAAMG,EAAKG,GACXL,EAAMG,EAAEJ,EAAKM,EAAOJ,GAChBd,GACF,GAAIE,EAAQiB,EAAOD,GAASL,OACvB,GAAIA,EAAK,OAAQb,GACpB,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOY,EACf,KAAK,EAAG,OAAOM,EACf,KAAK,EAAGC,EAAOE,KAAKT,QACf,GAAIP,EAAU,OAAO,EAGhC,OAAOC,GAAiB,EAAIF,GAAWC,EAAWA,EAAWc,K,09CCe1D,SAAeG,EAAtB,sC,8DAAO,WAA+BC,EAAcC,EAAaC,GAA1D,0IACLC,QAAQC,IAAIH,GACRI,EAAYL,EAAaM,OAASN,EAAaO,IAC/CC,EAAY,EACZC,EAAWR,EAAYS,MACvBC,EAAkBX,EAAaM,OAC/BM,EAAc,EACdC,EAAS,GACTC,EAAU,GAED,IAATZ,EAVC,iBAWHU,GAAe,EAXZ,2BAYe,IAATV,EAZN,wBAaCF,EAAae,mBACXC,EAAS,CACXC,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OACrBe,OAAQ,EACRX,MAAOT,EAAYS,OAErBG,EAAOf,KAAKkB,GACRM,EAAS,CACXL,QAASjB,EAAakB,YACtBC,cAAenB,EAAae,kBAAkBQ,QAC9CH,SAAUpB,EAAae,kBAAkBK,SACzCd,OAAQN,EAAaO,IACrBc,OAAQ,EACRX,MAAOV,EAAawB,eAAed,OAErCG,EAAOf,KAAKwB,IAEZT,EAAOf,KAAK,CACVmB,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OAASN,EAAaO,IAC3Cc,OAAQ,EACRX,MAAOT,EAAYS,QAIvBI,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OACrBoB,SAAU1B,EAAaqB,SAhDtB,kBAkDI,CAACM,SAAS,EAAMC,KAAM,CAACf,OAAQA,EAAQC,QAASA,KAlDpD,WAmDe,IAATZ,EAnDN,wBAoDCF,EAAae,mBACXC,EAAS,CACXC,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OACrBe,OAAQ,EACRX,MAAOT,EAAYS,OAErBG,EAAOf,KAAKkB,GACRM,EAAS,CACXL,QAASjB,EAAakB,YACtBC,cAAenB,EAAae,kBAAkBQ,QAC9CH,SAAUpB,EAAae,kBAAkBK,SACzCd,OAAQN,EAAaO,IACrBc,OAAQ,EACRX,MAAOV,EAAawB,eAAed,OAErCG,EAAOf,KAAKwB,GACZR,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OACrBoB,SAAU,MAGZb,EAAOf,KAAK,CACVmB,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OACrBe,OAAQ,EACRX,MAAOT,EAAYS,QAErBI,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQN,EAAaM,OAASN,EAAaO,IAC3CmB,SAAU,KA5FX,kBAgGI,CAACC,SAAS,EAAMC,KAAM,CAACf,OAAQA,EAAQC,QAASA,KAhGpD,WAiGgB,IAATZ,EAjGP,iBAkGHS,EAAkBX,EAAaM,OAASN,EAAaO,IACjDsB,GAAS,IAAIC,MAAQC,UAAY,OACrCnB,EAAcoB,OAAOH,EAAMI,WAAWC,OAAO,EAAGL,EAAMI,WAAWvC,OAAS,IApGvE,IAqGcM,EAAamC,WArG3B,IAqGH,2BAASC,EAAgC,QACnCpB,EAAS,CACXC,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQ8B,EAAKC,QACbhB,QAAS,EACTX,MAAO0B,EAAK1B,OAEdG,EAAOf,KAAKkB,GA9GX,qCAiHHF,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQK,EACRe,SAAUd,IAtHT,kBAwHI,CAACe,SAAS,EAAMC,KAAM,CAACf,OAAQA,EAAQC,QAASA,KAxHpD,WAyHe,KAATZ,EAzHN,iBA0HHU,GAAe,EA1HZ,2BA2He,KAATV,EA3HN,iBA4HHS,EAAkBX,EAAaM,OAASN,EAAaO,IAEjDsB,GAAS,IAAIC,MAAQC,UAAY,OACrCnB,EAAcoB,OAAOH,EAAMI,WAAWC,OAAO,EAAGL,EAAMI,WAAWvC,OAAS,IA/HvE,IAiIcM,EAAamC,WAjI3B,IAiIH,2BAASC,EAAgC,QACnCpB,EAAS,CACXC,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQ8B,EAAKC,QACbhB,QAAS,EACTX,MAAO0B,EAAK1B,OAEdG,EAAOf,KAAKkB,GA1IX,8BA6IHF,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQK,EACRe,SAAUd,IAER0B,EAAY,EApJb,IAqJctC,EAAamC,WArJ3B,IAqJH,2BAASC,EAAgC,QACvCE,GAAwBN,OAAOI,EAAKC,SAtJnC,qCAwJHvB,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQgC,EAAYtC,EAAaM,OACjCoB,UAAW,IA7JV,kBAgKI,CAACC,SAAS,EAAMC,KAAM,CAACf,OAAQA,EAAQC,QAASA,KAhKpD,eAmKLD,EAAOf,KAAK,CACVmB,QAASjB,EAAakB,YACtBC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQD,EACRgB,OAAQb,EACRE,MAAOD,IAGTK,EAAQhB,KAAK,CACXmB,QAASjB,EAAayB,UAAYzB,EAAayB,UAAYzB,EAAakB,YACxEC,cAAenB,EAAamB,cAC5BC,SAAUpB,EAAaoB,SACvBd,OAAQK,EACRe,SAAUd,IAjLP,kBAsLE,CAACe,SAAS,EAAMC,KAAM,CAACf,OAAQA,EAAQC,QAASA,KAtLlD,4C,wBAgMA,SAAeyB,IAAtB,+B,8DAAO,2HAA8BC,EAA9B,+BAA6C,EAAGC,EAAhD,+BAA0D,EAAGxB,EAA7D,gCACQyB,eAAK,IAAK,oBAAqB,CAACF,EAAcC,EAASxB,IACjE0B,MAAK,SAACC,GACL,OAAIA,EAASC,eAAe,UACnB,CAAClB,SAAS,EAAMC,KAAM,CAACkB,QAASF,EAAShD,OAAOkD,QAASpC,MAAOkC,EAAShD,OAAOc,QAEhF,CAACiB,SAAS,EAAOC,KAAMgB,MAGjCG,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAV7B,mF,wBAqBA,SAAeC,IAAtB,+B,8DAAO,2HAAgC1B,EAAhC,+BAA0C,EAAGkB,EAA7C,+BAAuD,EAAGxB,EAA1D,gCACQyB,eAAK,IAAK,oBAAqB,CAACnB,EAASkB,EAASxB,IAC5D0B,MAAK,SAACC,GAEL,OAAIA,EAAShD,OACJ,CAAC+B,SAAS,EAAMC,KAAMgB,EAAShD,QAE/B,CAAC+B,SAAS,EAAOC,KAAMgB,MAGjCG,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAX7B,mF,wBA0DA,SAAeE,EAAtB,kC,8DAAO,WAAoCC,GAApC,iGACQT,eAAK,IAAK,aAAc,CAACS,IACnCR,MAAK,SAACC,GAEL,GADAzC,QAAQC,IAAIwC,GACRA,EAASC,eAAe,UAAW,CACrC,IAAIO,EAAUR,EAAShD,OAAOyD,MAC9B,OAAOX,eAAK,IAAK,cAAe,CAACS,IAC9BR,MAAK,SAACC,GACL,OAAIA,EAASC,eAAe,UACnB,CAAClB,SAAS,EAAM2B,KAAMF,GAEtB,CAACzB,SAAS,EAAOC,KAAMgB,EAASI,UAG1CD,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAGlC,MAAO,CAACrB,SAAS,EAAOC,KAAMgB,EAASI,UAG1CD,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAtB7B,mF,wBA+BA,SAAeO,EAAtB,kC,8DAAO,WAAiCC,GAAjC,iGACQd,eAAK,IAAK,sBAAuB,CAAC,EAAG,IAAKc,IACpDb,MAAK,SAACC,GACL,OAAOA,EAAShD,UAEjBmD,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAN7B,mF,wBAkCA,SAAeS,IAAtB,+B,8DAAO,2GACDC,EAAU,CACZ,CAACnC,QAAS,EAAGoC,cAAe,OAC5B,CAACpC,QAAS,EAAGoC,cAAe,SAHzB,SAKCjB,eAAK,IAAK,sBAAuB,IACpCC,MAAK,SAACC,GAEDA,EAASC,eAAe,WACtBe,eAAef,eAAe,eAChCe,eAAeC,WAAW,cAE5BD,eAAeE,QAAQ,aAAcC,KAAKC,UAAUpB,EAAShD,UAE7DgE,eAAeE,QAAQ,aAAcC,KAAKC,UAAUN,OAGvDX,OAAM,SAACC,GACN7C,QAAQC,IAAI4C,GACZY,eAAeE,QAAQ,aAAcC,KAAKC,UAAUN,OAnBnD,2C,wBAwBA,SAAeO,EAAtB,kC,8DAAO,WAAkC1C,GAAlC,yGACCkC,IADD,UAEDS,EAAaH,KAAKI,MAAMP,eAAeQ,QAAQ,gBAC/CF,EAHC,uBAICG,EAAUH,EAAWI,MAAK,SAACC,GAC7B,OAAOA,EAAEhD,UAAYA,KALpB,kBAOI8C,EAAQV,eAPZ,gCASI,IATJ,2C,wBAmBA,SAAea,EAAtB,kC,8DAAO,WAAgCC,GAAhC,iGACQ/B,eAAK,IAAK,SAAU,CAAC+B,IAC/B9B,KADU,yDACL,WAAOC,GAAP,qFAEAA,EAASC,eAAe,YAAaD,EAAShD,OAAO8E,OAFrD,oBAGE9B,EAAShD,OAAO8E,SAAU9B,EAAShD,OAAO+E,SAH5C,yCAIO,CAAChD,SAAS,EAAMC,KAAM,CAAC+C,SAAU/B,EAAShD,OAAO+E,SAAUD,OAAQ9B,EAAShD,OAAO8E,UAJ1F,gCAMO,CAAC/C,SAAS,EAAMC,KAAM,KAN7B,sDASK,CAACD,SAAS,EAAOC,KAAMgB,IAT5B,2CADK,uDAaVG,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAf7B,mF,wBAyBA,SAAe4B,EAAtB,wC,8DAAO,WAA0BC,EAAUC,EAAa7D,EAAS8D,GAA1D,8FACDC,EAAiB,CACnB/D,QAASA,EACTqC,KAAMyB,EAAYE,UAAUhD,SAAS,OACrCkB,MAAO4B,EAAYG,cAAcjD,SAAS,QAJvC,SAMQS,eAAK,IAAK,YAAa,CAACmC,EAAUG,IAC5CrC,MAAK,SAACC,GAEL,GAAIA,EAASC,eAAe,UAAW,CACrC,IAAIsC,EAAS,CACXC,IAAKC,aAAaxC,eAAe,OAASkB,KAAKI,MAAMkB,aAAajB,QAAQ,QAAQkB,KAAO,kCACzFT,SAAUA,EACVC,YAAaA,GAKf,MAAO,CAACnD,SAAS,EAAMC,KAAM,CAACuD,OAAQA,EAAQJ,YAAaA,IAE3D,MAAO,CAACpD,SAAS,EAAOC,KAAMgB,MAGjCG,OAAM,SAACC,GACN,MAAO,CAACrB,SAAS,EAAOC,KAAMoB,MAxB7B,mF,wBAoCA,SAAeuC,EAAtB,sC,8DAAO,WAAkC/B,EAAWgC,EAAcC,GAA3D,oGACLtF,QAAQC,IAAIsF,QAGRN,EAAMM,OACN9D,EAAO,CAAC+D,iBAAWnC,EAAWgC,EAAcC,GAC1CG,EAAS,CACb,QAAW,MACX,OAAU,qBACV,OAAUhE,EACV,GAAMiE,KAAKC,MAAsB,IAAhBD,KAAKE,WAVnB,kBAaaC,IAAMtD,KAAK0C,EAAKQ,GAb7B,UAaCtG,EAbD,QAeCA,EAAIsC,KAAKiB,eAAe,UAfzB,0CAgBM,CAAClB,SAAS,EAAMC,KAAMtC,EAAIsC,KAAKhC,SAhBrC,iCAkBM,CAAC+B,SAAS,EAAOC,KAAMtC,EAAIsC,OAlBjC,sFAsBI,CAACD,SAAS,EAAOC,KAAM,EAAF,KAtBzB,0D,4DC9eP,IAAIqE,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GACpCC,EAAM,OACNC,GAAS,EAETD,IAAO,IAAIE,MAAM,GAAGF,IAAK,WAAcC,GAAS,KACpDH,EAAQA,EAAQK,EAAIL,EAAQM,EAAIH,EAAQ,QAAS,CAC/C9B,KAAM,SAAcnF,GAClB,OAAO+G,EAAMM,KAAMrH,EAAYsH,UAAU/G,OAAS,EAAI+G,UAAU,QAAK5G,MAGzE,EAAQ,OAAR,CAAiCsG,I,qBCZjC,IAAIO,EAAqB,EAAQ,QAEjCnI,EAAOC,QAAU,SAAUmI,EAAUjH,GACnC,OAAO,IAAKgH,EAAmBC,GAAxB,CAAmCjH,K,qBCJ5C,IAAIkH,EAAW,EAAQ,QACnBC,EAAU,EAAQ,QAClBC,EAAU,EAAQ,OAAR,CAAkB,WAEhCvI,EAAOC,QAAU,SAAUmI,GACzB,IAAII,EASF,OAREF,EAAQF,KACVI,EAAIJ,EAASK,YAEG,mBAALD,GAAoBA,IAAMV,QAASQ,EAAQE,EAAEE,aAAaF,OAAIlH,GACrE+G,EAASG,KACXA,EAAIA,EAAED,GACI,OAANC,IAAYA,OAAIlH,UAETA,IAANkH,EAAkBV,MAAQU","file":"js/chunk-3228ae4b.c25cc553.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","import axios from 'axios'\r\nimport {post} from './https'\r\nimport {chainID} from './util'\r\nimport {MAIN_INFO,API_URL} from '@/config.js'\r\n\r\n/**\r\n * 判断是否为主网\r\n * @param chainId\r\n **/\r\nexport function isMainNet(chainId) {\r\n  return chainId === MAIN_INFO.chainId;\r\n}\r\n\r\n/**\r\n * 计算手续费\r\n * @param tx\r\n * @param signatrueCount 签名数量，默认为1\r\n **/\r\nexport function countFee(tx, signatrueCount) {\r\n  let txSize = tx.txSerialize().length;\r\n  txSize += signatrueCount * 110;\r\n  return 100000 * Math.ceil(txSize / 1024);\r\n}\r\n\r\n/**\r\n * 计算跨链交易手续费\r\n * @param tx\r\n * @param signatrueCount 签名数量，默认为1\r\n **/\r\nexport async function countCtxFee(tx, signatrueCount) {\r\n  let resultValue = 0;\r\n  await post('/', 'getByzantineCount', [tx.txSerialize().toString('hex')])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        let txSize = tx.txSerialize().length;\r\n        txSize += (signatrueCount + response.result.value) * 110;\r\n        resultValue = 1000000 * Math.ceil(txSize / 1024)\r\n      } else {\r\n        resultValue = -100\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      resultValue = -100\r\n    });\r\n  return resultValue;\r\n}\r\n\r\n/**\r\n * 获取inputs and outputs\r\n * @param transferInfo\r\n * @param balanceInfo\r\n * @param type 2:转账 4:创建节点 5:加入staking 6:退出staking 9:注销节点 28:追加保证金 29:退出保证金\r\n * @returns {*}\r\n **/\r\nexport async function inputsOrOutputs(transferInfo, balanceInfo, type) {\r\n  console.log(balanceInfo);\r\n  let newAmount = transferInfo.amount + transferInfo.fee;\r\n  let newLocked = 0;\r\n  let newNonce = balanceInfo.nonce;\r\n  let newoutputAmount = transferInfo.amount;\r\n  let newLockTime = 0;\r\n  let inputs = [];\r\n  let outputs = [];\r\n\r\n  if (type === 4) {\r\n    newLockTime = -1;\r\n  } else if (type === 5) {\r\n    if (transferInfo.defaultAssetsInfo) { // 加入的资产不是nvt input组装两个\r\n      let newArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount,\r\n        locked: 0,\r\n        nonce: balanceInfo.nonce\r\n      };\r\n      inputs.push(newArr);\r\n      let feeArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.defaultAssetsInfo.chainId,\r\n        assetsId: transferInfo.defaultAssetsInfo.assetsId,\r\n        amount: transferInfo.fee,\r\n        locked: 0,\r\n        nonce: transferInfo.feeBalanceInfo.nonce\r\n      };\r\n      inputs.push(feeArr);\r\n    } else { // 加入的资产是nvt 合并amount+fee\r\n      inputs.push({\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount + transferInfo.fee,\r\n        locked: 0,\r\n        nonce: balanceInfo.nonce\r\n      });\r\n    }\r\n\r\n    outputs.push({\r\n      address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n      assetsChainId: transferInfo.assetsChainId,\r\n      assetsId: transferInfo.assetsId,\r\n      amount: transferInfo.amount,\r\n      lockTime: transferInfo.locked\r\n    });\r\n    return {success: true, data: {inputs: inputs, outputs: outputs}};\r\n  } else if (type === 6) {\r\n    if (transferInfo.defaultAssetsInfo) { // 加入的资产不是nvt input组装两个\r\n      let newArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount,\r\n        locked: 0,\r\n        nonce: balanceInfo.nonce\r\n      };\r\n      inputs.push(newArr);\r\n      let feeArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.defaultAssetsInfo.chainId,\r\n        assetsId: transferInfo.defaultAssetsInfo.assetsId,\r\n        amount: transferInfo.fee,\r\n        locked: 0,\r\n        nonce: transferInfo.feeBalanceInfo.nonce\r\n      };\r\n      inputs.push(feeArr);\r\n      outputs.push({\r\n        address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount,\r\n        lockTime: 0\r\n      });\r\n    } else { // 加入的资产是nvt 合并amount+fee\r\n      inputs.push({\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount,\r\n        locked: 0,\r\n        nonce: balanceInfo.nonce\r\n      });\r\n      outputs.push({\r\n        address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: transferInfo.amount - transferInfo.fee,\r\n        lockTime: 0\r\n      });\r\n    }\r\n\r\n    return {success: true, data: {inputs: inputs, outputs: outputs}};\r\n  }  else if (type === 9) { //注销节点\r\n    newoutputAmount = transferInfo.amount - transferInfo.fee;\r\n    let times = (new Date()).valueOf() + 3600000 * 72;//锁定三天\r\n    newLockTime = Number(times.toString().substr(0, times.toString().length - 3));\r\n    for (let item of transferInfo.nonceList) {\r\n      let newArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: item.deposit,\r\n        locked: -1,\r\n        nonce: item.nonce\r\n      };\r\n      inputs.push(newArr)\r\n    }\r\n\r\n    outputs.push({\r\n      address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n      assetsChainId: transferInfo.assetsChainId,\r\n      assetsId: transferInfo.assetsId,\r\n      amount: newoutputAmount,\r\n      lockTime: newLockTime\r\n    });\r\n    return {success: true, data: {inputs: inputs, outputs: outputs}};\r\n  } else if (type === 28) { //追加保证金\r\n    newLockTime = -1;\r\n  } else if (type === 29) { //退出保证金\r\n    newoutputAmount = transferInfo.amount - transferInfo.fee;\r\n    //锁定三天\r\n    let times = (new Date()).valueOf() + 3600000 * 72;\r\n    newLockTime = Number(times.toString().substr(0, times.toString().length - 3));\r\n\r\n    for (let item of transferInfo.nonceList) {\r\n      let newArr = {\r\n        address: transferInfo.fromAddress,\r\n        assetsChainId: transferInfo.assetsChainId,\r\n        assetsId: transferInfo.assetsId,\r\n        amount: item.deposit,\r\n        locked: -1,\r\n        nonce: item.nonce\r\n      };\r\n      inputs.push(newArr)\r\n    }\r\n\r\n    outputs.push({\r\n      address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n      assetsChainId: transferInfo.assetsChainId,\r\n      assetsId: transferInfo.assetsId,\r\n      amount: newoutputAmount,\r\n      lockTime: newLockTime\r\n    });\r\n    let allAmount = 0;\r\n    for (let item of transferInfo.nonceList) {\r\n      allAmount = allAmount + Number(item.deposit)\r\n    }\r\n    outputs.push({\r\n      address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n      assetsChainId: transferInfo.assetsChainId,\r\n      assetsId: transferInfo.assetsId,\r\n      amount: allAmount - transferInfo.amount,\r\n      lockTime: -1\r\n    });\r\n\r\n    return {success: true, data: {inputs: inputs, outputs: outputs}};\r\n  }\r\n\r\n  inputs.push({\r\n    address: transferInfo.fromAddress,\r\n    assetsChainId: transferInfo.assetsChainId,\r\n    assetsId: transferInfo.assetsId,\r\n    amount: newAmount,\r\n    locked: newLocked,\r\n    nonce: newNonce\r\n  });\r\n\r\n  outputs.push({\r\n    address: transferInfo.toAddress ? transferInfo.toAddress : transferInfo.fromAddress,\r\n    assetsChainId: transferInfo.assetsChainId,\r\n    assetsId: transferInfo.assetsId,\r\n    amount: newoutputAmount,\r\n    lockTime: newLockTime\r\n  });\r\n\r\n  /*console.log(inputs);\r\n  console.log(outputs);*/\r\n  return {success: true, data: {inputs: inputs, outputs: outputs}};\r\n}\r\n\r\n/**\r\n * 获取账户的余额及nonce\r\n * @param assetChainId\r\n * @param assetId\r\n * @param address\r\n * @returns {Promise<any>}\r\n */\r\nexport async function getNulsBalance(assetChainId = 2, assetId = 1, address) {\r\n  return await post('/', 'getAccountBalance', [assetChainId, assetId, address])\r\n    .then((response) => {\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: {balance: response.result.balance, nonce: response.result.nonce}}\r\n      } else {\r\n        return {success: false, data: response}\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 获取地址资产信息\r\n * @param chainId\r\n * @param assetId\r\n * @param address\r\n * @returns {Promise<any>}\r\n */\r\nexport async function getBaseAssetInfo(chainId = 2, assetId = 1, address) {\r\n  return await post('/', 'getAccountBalance', [chainId, assetId, address])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.result) {\r\n        return {success: true, data: response.result}\r\n      } else {\r\n        return {success: false, data: response}\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 验证交易\r\n * @param txHex\r\n * @returns {Promise<any>}\r\n **/\r\nexport async function validateTx(txHex) {\r\n  return await post('/', 'validateTx', [txHex])\r\n    .then((response) => {\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: response.result};\r\n      } else {\r\n        return {success: false, data: response.error};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 广播交易\r\n * @param txHex\r\n * @returns {Promise<any>}\r\n **/\r\nexport async function broadcastTx(txHex) {\r\n  return await post('/', 'broadcastTx', [txHex])\r\n    .then((response) => {\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: response.result};\r\n      } else {\r\n        return {success: false, data: response.error};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 验证交易并广播\r\n * @param txHex\r\n * @returns {Promise<any>}\r\n **/\r\nexport async function validateAndBroadcast(txHex) {\r\n  return await post('/', 'validateTx', [txHex])\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        let newHash = response.result.value;\r\n        return post('/', 'broadcastTx', [txHex])\r\n          .then((response) => {\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              return {success: true, hash: newHash};\r\n            } else {\r\n              return {success: false, data: response.error};\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error};\r\n          });\r\n      } else {\r\n        return {success: false, data: response.error};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 获取节点的委托列表\r\n * @param agentHash\r\n * @returns {Promise<any>}\r\n **/\r\nexport async function agentDeposistList(agentHash) {\r\n  return await post('/', 'getConsensusDeposit', [1, 300, agentHash])\r\n    .then((response) => {\r\n      return response.result;\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 获取合约代码构造函数\r\n * @param contractCodeHex\r\n * @returns {Promise<any>}\r\n */\r\nexport async function getContractConstructor(contractCodeHex) {\r\n  return await post('/', 'getContractConstructor', [contractCodeHex])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: response.result.constructor};\r\n      } else {\r\n        return {success: false, data: response.error};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 获取链ID对应的前缀\r\n * @returns {Promise<any>}\r\n */\r\nexport async function getAllAddressPrefix() {\r\n  let newData = [\r\n    {chainId: 4, addressPrefix: 'NVT'},\r\n    {chainId: 4, addressPrefix: 'TNVT'},\r\n  ];\r\n  await post('/', 'getAllAddressPrefix', [])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        if (sessionStorage.hasOwnProperty('prefixData')) {\r\n          sessionStorage.removeItem('prefixData')\r\n        }\r\n        sessionStorage.setItem('prefixData', JSON.stringify(response.result));\r\n      } else {\r\n        sessionStorage.setItem('prefixData', JSON.stringify(newData));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      sessionStorage.setItem('prefixData', JSON.stringify(newData));\r\n    });\r\n}\r\n\r\n//根据链ID获取前缀\r\nexport async function getPrefixByChainId(chainId) {\r\n  await getAllAddressPrefix();\r\n  let prefixData = JSON.parse(sessionStorage.getItem('prefixData'));\r\n  if (prefixData) {\r\n    let newInfo = prefixData.find((v) => {\r\n      return v.chainId === chainId;\r\n    });\r\n    return newInfo.addressPrefix;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * @disc: 获取扫描后签名信息\r\n * @params: importRandomString\r\n * @date: 2019-12-02 16:39\r\n * @author: Wave\r\n */\r\nexport async function getScanAutograph(randomString) {\r\n  return await post('/', 'getMsg', [randomString])\r\n    .then(async (response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\") && response.result.pubkey) {\r\n        if (response.result.pubkey && response.result.signData) {\r\n          return {success: true, data: {signData: response.result.signData, pubkey: response.result.pubkey}}\r\n        } else {\r\n          return {success: true, data: {}}\r\n        }\r\n      } else {\r\n        return {success: false, data: response}\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error}\r\n    });\r\n}\r\n\r\n/**\r\n * @disc: 发送消息到后台\r\n * @params: key,value\r\n * @date: 2019-12-02 16:39\r\n * @author: Wave\r\n */\r\nexport async function commitData(txHexKey, signDataKey, address, assembleHex) {\r\n  let parameterValue = {\r\n    address: address,\r\n    hash: assembleHex.getHash().toString('hex'),\r\n    txHex: assembleHex.txSerialize().toString(\"hex\")\r\n  };\r\n  return await post('/', 'commitMsg', [txHexKey, parameterValue])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        let txInfo = {\r\n          url: localStorage.hasOwnProperty('url') ? JSON.parse(localStorage.getItem('url')).urls : 'https://beta.wallet.nuls.io/api',\r\n          txHexKey: txHexKey,\r\n          signDataKey: signDataKey,\r\n        };\r\n        /*console.log(txInfo);\r\n        console.log(parameterValue.hash);\r\n        console.log(parameterValue.txHex);*/\r\n        return {success: true, data: {txInfo: txInfo, assembleHex: assembleHex}}\r\n      } else {\r\n        return {success: false, data: response}\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error}\r\n    });\r\n}\r\n\r\n/**\r\n * @disc: 获取退出节点/退出保证金对应的追加保证金交易列表\r\n * @params: agentHash 节点hash\r\n * @params: reduceAmount 退出金额\r\n * @params: quitAll  是否全部退出 0：部分 1：全部\r\n * @date: 2020-05-15 16:03\r\n * @author: Wave\r\n */\r\nexport async function getReduceNonceList(agentHash, reduceAmount, quitAll) {\r\n  console.log(API_URL);\r\n  //let url = 'http://seede.nuls.io:17004/jsonrpc';\r\n  //let url = 'http://192.168.1.122:17004/jsonrpc';\r\n  let url = API_URL;\r\n  let data = [chainID(), agentHash, reduceAmount, quitAll];\r\n  const params = {\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": 'getReduceNonceList',\r\n    \"params\": data,\r\n    \"id\": Math.floor(Math.random() * 1000)\r\n  };\r\n  try {\r\n    let res = await axios.post(url, params);\r\n    //console.log(res.data);\r\n    if (res.data.hasOwnProperty('result')) {\r\n      return {success: true, data: res.data.result}\r\n    } else {\r\n      return {success: false, data: res.data}\r\n    }\r\n  }\r\n  catch (err) {\r\n    return {success: false, data: err}\r\n  }\r\n\r\n}\r\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n"],"sourceRoot":""}